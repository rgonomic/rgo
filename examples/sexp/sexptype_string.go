// Code generated by "stringer -type=SEXPType"; DO NOT EDIT.

package sexp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NILSXP-0]
	_ = x[SYMSXP-1]
	_ = x[LISTSXP-2]
	_ = x[CLOSXP-3]
	_ = x[ENVSXP-4]
	_ = x[PROMSXP-5]
	_ = x[LANGSXP-6]
	_ = x[SPECIALSXP-7]
	_ = x[BUILTINSXP-8]
	_ = x[CHARSXP-9]
	_ = x[LGLSXP-10]
	_ = x[INTSXP-13]
	_ = x[REALSXP-14]
	_ = x[CPLXSXP-15]
	_ = x[STRSXP-16]
	_ = x[DOTSXP-17]
	_ = x[ANYSXP-18]
	_ = x[VECSXP-19]
	_ = x[EXPRSXP-20]
	_ = x[BCODESXP-21]
	_ = x[EXTPTRSXP-22]
	_ = x[WEAKREFSXP-23]
	_ = x[RAWSXP-24]
	_ = x[S4SXP-25]
	_ = x[NEWSXP-30]
	_ = x[FREESXP-31]
	_ = x[FUNSXP-99]
}

const (
	_SEXPType_name_0 = "NILSXPSYMSXPLISTSXPCLOSXPENVSXPPROMSXPLANGSXPSPECIALSXPBUILTINSXPCHARSXPLGLSXP"
	_SEXPType_name_1 = "INTSXPREALSXPCPLXSXPSTRSXPDOTSXPANYSXPVECSXPEXPRSXPBCODESXPEXTPTRSXPWEAKREFSXPRAWSXPS4SXP"
	_SEXPType_name_2 = "NEWSXPFREESXP"
	_SEXPType_name_3 = "FUNSXP"
)

var (
	_SEXPType_index_0 = [...]uint8{0, 6, 12, 19, 25, 31, 38, 45, 55, 65, 72, 78}
	_SEXPType_index_1 = [...]uint8{0, 6, 13, 20, 26, 32, 38, 44, 51, 59, 68, 78, 84, 89}
	_SEXPType_index_2 = [...]uint8{0, 6, 13}
)

func (i SEXPType) String() string {
	switch {
	case i <= 10:
		return _SEXPType_name_0[_SEXPType_index_0[i]:_SEXPType_index_0[i+1]]
	case 13 <= i && i <= 25:
		i -= 13
		return _SEXPType_name_1[_SEXPType_index_1[i]:_SEXPType_index_1[i+1]]
	case 30 <= i && i <= 31:
		i -= 30
		return _SEXPType_name_2[_SEXPType_index_2[i]:_SEXPType_index_2[i+1]]
	case i == 99:
		return _SEXPType_name_3
	default:
		return "SEXPType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
