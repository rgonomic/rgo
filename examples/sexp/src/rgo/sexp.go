// Code generated by rgnonomic/rgo; DO NOT EDIT.

package main

/*
#define USE_RINTERNALS
#include <R.h>
#include <Rinternals.h>
extern void R_error(char *s);

// TODO(kortschak): Only emit these when needed.
extern Rboolean Rf_isNull(SEXP s);
extern _GoString_ R_gostring(SEXP x, R_xlen_t i);
extern int getListElementIndex(SEXP list, const char *str);
*/
import "C"

import (
	"fmt"
	"unsafe"

	"github.com/rgonomic/rgo/examples/sexp"
)

//export Wrapped_PrintSEXP
func Wrapped_PrintSEXP(_R_p C.SEXP) C.SEXP {
	defer func() {
		r := recover()
		if r != nil {
			err := C.CString(fmt.Sprint(r))
			C.R_error(err)
			C.free(unsafe.Pointer(err))
		}
	}()

	_p0 := unpackSEXP_types_Basic_unsafe_Pointer(_R_p)
	_r0 := sexp.PrintSEXP(_p0)
	return packSEXP_PrintSEXP(_r0)
}

func packSEXP_PrintSEXP(p0 unsafe.Pointer) C.SEXP {
	return packSEXP_types_Basic_unsafe_Pointer(p0)
}

func unpackSEXP_types_Basic_unsafe_Pointer(p C.SEXP) unsafe.Pointer {
	return unsafe.Pointer(p)
}

func packSEXP_types_Basic_unsafe_Pointer(p unsafe.Pointer) C.SEXP {
	return C.SEXP(p)
}

func main() {}
